/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react';
import { useGLTF } from '@react-three/drei';
import {useSpring, animated} from '@react-spring/three';

export default function KeyCap(props) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/keyCap.glb')
  const [clicked, setClicked] = useState(false);
  const [hovered, setHovered] = useState(false);
  const settings = useSpring({
    position: clicked ? [0,3,0]:[0,-2,0],
    rotation: clicked ? [-Math.PI / 2, -0.7, 3.1]:[-Math.PI / 2, 0, 3.1],
    color: hovered ? 'blue':'red'
  });
  return (
    <group ref={group} {...props} dispose={null}>
      <animated.mesh
        castShadow
        geometry={nodes['Box_-_baked'].geometry}
        material={materials.Monarch}
        position={settings.position}
        rotation={settings.rotation}
        scale={[0.03,0.03,0.03]}
        onClick={()=>setClicked(!clicked)}
        onPointerOver={()=>setHovered(true)}
        onPointerOut={()=>setHovered(false)}
        material-color={settings.color}
      />
    </group>
  )
}

useGLTF.preload('/keyCap.glb')
